{"ast":null,"code":"var _jsxFileName = \"/home/noor/Documents/910_react/55_redux/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers/rootReducers\";\nimport axios from \"axios\";\nimport { rootActions, actionLoading, actionSuccess } from \"./actions/rootActions\";\nimport { createLogger } from \"redux-logger\";\nimport { applyMiddleware } from \"redux\"; // store\n\nconst logger = createLogger();\nconst store = createStore(reducer, applyMiddleware(logger)); // dispatch register Flight\n\nconst getUsers = flightObject => {\n  return dispatch => {\n    // dispatch loading action\n    store.dispatch(actionLoading());\n    axios.get(\"https://randomuser.me/api/\").then(res => {\n      // dispach success action\n      dispatch(actionSuccess(res.data.results));\n    }).catch(error => {// disptch error action\n    });\n  };\n};\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(App, {\n  dispatchRegisterFlight: dispatchRegisterFlight,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), document.getElementById(\"root\"));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/noor/Documents/910_react/55_redux/src/index.js"],"names":["React","ReactDOM","App","Provider","serviceWorker","createStore","reducer","axios","rootActions","actionLoading","actionSuccess","createLogger","applyMiddleware","logger","store","getUsers","flightObject","dispatch","get","then","res","data","results","catch","error","render","dispatchRegisterFlight","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,aAHF,QAIO,uBAJP;AAKA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CACA;;AACA,MAAMC,MAAM,GAAGF,YAAY,EAA3B;AACA,MAAMG,KAAK,GAAGT,WAAW,CAACC,OAAD,EAAUM,eAAe,CAACC,MAAD,CAAzB,CAAzB,C,CACA;;AAEA,MAAME,QAAQ,GAAGC,YAAY,IAAI;AAC/B,SAAOC,QAAQ,IAAI;AACjB;AACAH,IAAAA,KAAK,CAACG,QAAN,CAAeR,aAAa,EAA5B;AACAF,IAAAA,KAAK,CACFW,GADH,CACO,4BADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX;AACAH,MAAAA,QAAQ,CAACP,aAAa,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAd,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,KAAK,IAAI,CACd;AACD,KARH;AASD,GAZD;AAaD,CAdD;;AAgBAvB,QAAQ,CAACwB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAK,EAAA,sBAAsB,EAAEY,sBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF;AAQAxB,aAAa,CAACyB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers/rootReducers\";\nimport axios from \"axios\";\nimport {\n  rootActions,\n  actionLoading,\n  actionSuccess\n} from \"./actions/rootActions\";\nimport { createLogger } from \"redux-logger\";\nimport { applyMiddleware } from \"redux\";\n// store\nconst logger = createLogger();\nconst store = createStore(reducer, applyMiddleware(logger));\n// dispatch register Flight\n\nconst getUsers = flightObject => {\n  return dispatch => {\n    // dispatch loading action\n    store.dispatch(actionLoading());\n    axios\n      .get(\"https://randomuser.me/api/\")\n      .then(res => {\n        // dispach success action\n        dispatch(actionSuccess(res.data.results));\n      })\n      .catch(error => {\n        // disptch error action\n      });\n  };\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <App dispatchRegisterFlight={dispatchRegisterFlight} />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}