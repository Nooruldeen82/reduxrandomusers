{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import App from\"./App\";//import { Provider } from \"react-redux\";\nimport*as serviceWorker from\"./serviceWorker\";import{createStore}from\"redux\";import reducer from\"./reducers/rootReducers\";import axios from\"axios\";import{actionLoading,actionSuccess,actionFail}from\"./actions/rootActions\";import{createLogger}from\"redux-logger\";import{applyMiddleware}from\"redux\";import ReduxThunk from\"redux-thunk\";// store\nvar logger=createLogger();// dispatch register Flight\nvar getUsers=function getUsers(){return function(dispatch){// dispatch loading action\ndispatch(actionLoading());axios.get(\"https://randomuser.me/api/?results=10\").then(function(res){// dispach success action\ndispatch(actionSuccess(res.data.results));}).catch(function(error){// disptch error action\ndispatch(actionFail(error.message));});};};var store=createStore(reducer,applyMiddleware(ReduxThunk,logger));store.dispatch(getUsers());//const data = store.getState();\nvar render=function render(){ReactDOM.render(React.createElement(App,{users:store.getState()}),document.getElementById(\"root\"));};store.subscribe(render);serviceWorker.unregister();/* \n\nReactDOM.render(\n  <App data={store.getState()} />,\n  document.getElementById(\"root\")\n);\n*/","map":{"version":3,"sources":["/home/noor/Documents/910_react/reduxRandomUsers/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","reducer","axios","actionLoading","actionSuccess","actionFail","createLogger","applyMiddleware","ReduxThunk","logger","getUsers","dispatch","get","then","res","data","results","catch","error","message","store","render","getState","document","getElementById","subscribe","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA;AACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,OAASC,WAAT,KAA4B,OAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,aADF,CAEEC,aAFF,CAGEC,UAHF,KAIO,uBAJP,CAKA,OAASC,YAAT,KAA6B,cAA7B,CACA,OAASC,eAAT,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA;AACA,GAAMC,CAAAA,MAAM,CAAGH,YAAY,EAA3B,CAEA;AAEA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,MAAO,UAAAC,QAAQ,CAAI,CACjB;AACAA,QAAQ,CAACR,aAAa,EAAd,CAAR,CACAD,KAAK,CACFU,GADH,CACO,uCADP,EAEGC,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX;AACAH,QAAQ,CAACP,aAAa,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAd,CAAR,CACD,CALH,EAMGC,KANH,CAMS,SAAAC,KAAK,CAAI,CACd;AACAP,QAAQ,CAACN,UAAU,CAACa,KAAK,CAACC,OAAP,CAAX,CAAR,CACD,CATH,EAUD,CAbD,CAcD,CAfD,CAgBA,GAAMC,CAAAA,KAAK,CAAGpB,WAAW,CAACC,OAAD,CAAUM,eAAe,CAACC,UAAD,CAAaC,MAAb,CAAzB,CAAzB,CACAW,KAAK,CAACT,QAAN,CAAeD,QAAQ,EAAvB,EACA;AACA,GAAMW,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBxB,QAAQ,CAACwB,MAAT,CACE,oBAAC,GAAD,EAAK,KAAK,CAAED,KAAK,CAACE,QAAN,EAAZ,EADF,CAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,EAID,CALD,CAOAJ,KAAK,CAACK,SAAN,CAAgBJ,MAAhB,EACAtB,aAAa,CAAC2B,UAAd,GAEA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers/rootReducers\";\nimport axios from \"axios\";\nimport {\n  actionLoading,\n  actionSuccess,\n  actionFail\n} from \"./actions/rootActions\";\nimport { createLogger } from \"redux-logger\";\nimport { applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\n// store\nconst logger = createLogger();\n\n// dispatch register Flight\n\nconst getUsers = () => {\n  return dispatch => {\n    // dispatch loading action\n    dispatch(actionLoading());\n    axios\n      .get(\"https://randomuser.me/api/?results=10\")\n      .then(res => {\n        // dispach success action\n        dispatch(actionSuccess(res.data.results));\n      })\n      .catch(error => {\n        // disptch error action\n        dispatch(actionFail(error.message));\n      });\n  };\n};\nconst store = createStore(reducer, applyMiddleware(ReduxThunk, logger));\nstore.dispatch(getUsers());\n//const data = store.getState();\nconst render = () => {\n  ReactDOM.render(\n    <App users={store.getState()} />,\n    document.getElementById(\"root\")\n  );\n};\n\nstore.subscribe(render);\nserviceWorker.unregister();\n\n/* \n\nReactDOM.render(\n  <App data={store.getState()} />,\n  document.getElementById(\"root\")\n);\n*/\n"]},"metadata":{},"sourceType":"module"}