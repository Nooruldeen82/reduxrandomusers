{"ast":null,"code":"var _jsxFileName = \"/home/noor/Documents/910_react/55_redux/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers/rootReducers\";\nimport axios from \"axios\";\nimport { actionLoading, actionSuccess, actionFail } from \"./actions/rootActions\";\nimport { createLogger } from \"redux-logger\";\nimport { applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\"; // store\n\nconst logger = createLogger(); // dispatch register Flight\n\nconst getUsers = () => {\n  return dispatch => {\n    // dispatch loading action\n    store.dispatch(actionLoading());\n    axios.get(\"https://randomuser.me/api/?results=10\").then(res => {\n      // dispach success action\n      dispatch(actionSuccess(res.data.results));\n    }).catch(error => {\n      // disptch error action\n      dispatch(actionFail(error.message));\n    });\n  };\n};\n\nconst store = createStore(reducer, applyMiddleware(ReduxThunk, logger));\nstore.dispatch(getUsers());\n\nconst render = () => {\n  ReactDOM.render(React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), document.getElementById(\"root\"));\n};\n\nstore.subscribe(render);\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/noor/Documents/910_react/55_redux/src/index.js"],"names":["React","ReactDOM","App","Provider","serviceWorker","createStore","reducer","axios","actionLoading","actionSuccess","actionFail","createLogger","applyMiddleware","ReduxThunk","logger","getUsers","dispatch","store","get","then","res","data","results","catch","error","message","render","document","getElementById","subscribe","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,UAHF,QAIO,uBAJP;AAKA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CACA;;AACA,MAAMC,MAAM,GAAGH,YAAY,EAA3B,C,CAEA;;AAEA,MAAMI,QAAQ,GAAG,MAAM;AACrB,SAAOC,QAAQ,IAAI;AACjB;AACAC,IAAAA,KAAK,CAACD,QAAN,CAAeR,aAAa,EAA5B;AACAD,IAAAA,KAAK,CACFW,GADH,CACO,uCADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX;AACAJ,MAAAA,QAAQ,CAACP,aAAa,CAACW,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAd,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,KAAK,IAAI;AACd;AACAR,MAAAA,QAAQ,CAACN,UAAU,CAACc,KAAK,CAACC,OAAP,CAAX,CAAR;AACD,KATH;AAUD,GAbD;AAcD,CAfD;;AAgBA,MAAMR,KAAK,GAAGZ,WAAW,CAACC,OAAD,EAAUM,eAAe,CAACC,UAAD,EAAaC,MAAb,CAAzB,CAAzB;AACAG,KAAK,CAACD,QAAN,CAAeD,QAAQ,EAAvB;;AAEA,MAAMW,MAAM,GAAG,MAAM;AACnBzB,EAAAA,QAAQ,CAACyB,MAAT,CACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF;AAOD,CARD;;AAUAX,KAAK,CAACY,SAAN,CAAgBH,MAAhB;AAEAtB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers/rootReducers\";\nimport axios from \"axios\";\nimport {\n  actionLoading,\n  actionSuccess,\n  actionFail\n} from \"./actions/rootActions\";\nimport { createLogger } from \"redux-logger\";\nimport { applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\n// store\nconst logger = createLogger();\n\n// dispatch register Flight\n\nconst getUsers = () => {\n  return dispatch => {\n    // dispatch loading action\n    store.dispatch(actionLoading());\n    axios\n      .get(\"https://randomuser.me/api/?results=10\")\n      .then(res => {\n        // dispach success action\n        dispatch(actionSuccess(res.data.results));\n      })\n      .catch(error => {\n        // disptch error action\n        dispatch(actionFail(error.message));\n      });\n  };\n};\nconst store = createStore(reducer, applyMiddleware(ReduxThunk, logger));\nstore.dispatch(getUsers());\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n\n    document.getElementById(\"root\")\n  );\n};\n\nstore.subscribe(render);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}